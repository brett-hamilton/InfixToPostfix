<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerSplash.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIfBI5CHgT8Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT8Qh0EjAAAAAAAAAAAAAAAAAAAAABCHgT7Qx4DmUEeBWZBHgVmQR4FZkEe
        BWZBHgVmQR4FZkEeBWZBHgVmQh0FYEMdA1AAAAAAAAAAAAAAAAAAAAAAQh4E/0EeA1YAAAAARCIAHkQe
        BEREHgRERB4EREQeBERGGgAdAAAAAIAAAAJEHwYpAAAAAAAAAAAAAAAAAAAAAEIeBP9BHgNWAAAAAEIf
        BIRCHgT/Qh4E/0IeBP9CHgT/Qh0EgwAAAAFCHQOTQh4E9kMeBEUAAAAAAAAAAAAAAABCHgT/QR4DVgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEHwUxQh4E0kIeBP9CHgWpAAAAAAAAAAAAAAAAQh4E/0Ee
        A1YAAAAAQR4DVkIeBapCHgWqQh8Fp0AgACAAAAAAAAAAAEEeA1ZCHgT/AAAAAAAAAAAAAAAAAAAAAEIe
        BP9BHgNWAAAAAEMeA1RBHgS7QR4Eu0IeBLJEIgAeAAAAAAAAAABBHgNWQh4E/wAAAAAAAAAAAAAAAUMe
        BaFCHgT/QR0Ex0QfBikAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQR4DVkIeBP8AAAAAAAAAAAAA
        AABDHgNcQh4E/EIfA56AAAACQh4EiEIeBP9CHgT/Qh4E/0IeBP9CHgSHAAAAAEEeA1ZCHgT/AAAAAAAA
        AAAAAAAAAAAAAEQcBi0AAAABAAAAAEQiAB5CHgNVQh4DVUIeA1VCHgNVRhoAHQAAAABBHgNWQh4E/wAA
        AAAAAAAAAAAAAAAAAABBHAQ/QR0DT0IeA1VCHgNVQh4DVUIeA1VCHgNVQh4DVUIeA1VCHgNVQh8EjkIe
        BPoAAAAAAAAAAAAAAAAAAAAAQR4EiUIeBPdCHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BPdCHgSIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAwAMAAM//AADf/wAA2BMAAN/xAADcewAA3HsAAI/7
        AADIGwAA//sAAP/zAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARiMAFkEe
        BahCHgT1Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qh4E9kIeBak9GAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABCHQStQh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEIeBPNCHgT/QR4F4kIeBapCHgWqQh4FqkIeBapCHgWqQh4FqkIeBapCHgWqQh4FqkIe
        BapCHgWqQh4FqkIeBapCHgWqQh4FqkIeBapCHgWqQh4FqkIeBLVBHgS7Qh0ErgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQh4E/0IeBP9CHgWpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgT/Qh4E/0IeBakAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIeBP9CHgT/Qh4FqQAAAAAAAAAAAAAAAEAA
        AARCHgSHQh4FqkIeBapCHgWqQh4FqkIeBapCHgWqQh4FqkIeBapBHwSFVQAAAwAAAAAAAAAAAAAAADkc
        AAlDHgSGRB8GKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQh4E/0IeBP9CHgWpAAAAAAAA
        AAAAAAAAQx4ERUIeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9EHgREAAAAAAAA
        AABVKwAGQh4EsUIeBP9CHgTjRRwHJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgT/Qh4E/0Ie
        BakAAAAAAAAAAAAAAABGIwAWQh4E10IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E1j0Y
        ABUAAAAAVSsABkIeBLJCHgT/Qh4E/0IeBP9CHgTkRRwHJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIe
        BP9CHgT/Qh4FqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABCHwOeQh4E/0IeBP9CHgT/Qh4E/0IeBP9DHgTmVQAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAQh4E/0IeBP9CHgWpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEMeBipCHgNVQh4ExkIeBP9CHgT/Qh4DVUEeBEMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABCHgT/Qh4E/0IeBakAAAAAAAAAAAAAAAAAAAAAQxwGLkQeBEREHgRERB4EREQe
        BEREHgREQx8EQUAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgWpQh4E/0IeBP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIeBP9CHgT/Qh4FqQAAAAAAAAAAAAAAAEAgBTBCHgT+Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qx0EggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIeBalCHgT/Qh4E/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQh4E/0IeBP9CHgWpAAAAAAAAAAAAAAAAQSEFL0Ie
        BP5CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9BHgSBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQh4FqUIe
        BP9CHgT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgT/Qh4E/0IeBakAAAAAAAAAAAAA
        AAAAAAAAQxwGLkIeA1VCHgNVQh4DVUIeA1VCHgNVQh0ERkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABCHgWpQh4E/0IeBP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEIARARB4EREIeBP9CHgT/Qh8EwEQe
        BERAHAckAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEIeBalCHgT/Qh4E/wAAAAAAAAAAAAAAAAAAAAAAAAAARhcAC0IeBO5CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQh4FqUIeBP9CHgT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQRwEP0Ie
        BPRCHgT/Qh4E/0IeBP9CHgS5ORwACQAAAABGIwAWQh4D3EIeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E2j0YABUAAAAAAAAAAAAAAABCHgWpQh4E/0IeBP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQx8EOUIeBPFCHgT/Qh4EuTkcAAkAAAAAAAAAAEMeBEVCHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/RB4ERAAAAAAAAAAAAAAAAEIeBalCHgT/Qh4E/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARB8FMUMdBIJVKwAGAAAAAAAAAAAAAAAAQAAABEIeBIdBHgS7QR4Eu0Ee
        BLtBHgS7QR4Eu0EeBLtBHgS7QR4Eu0EfBIVVAAADAAAAAAAAAAAAAAAAQh4FqUIeBP9CHgT/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgWpQh4E/0Ie
        BP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIe
        BalCHgT/Qh4E/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQh8DnkIeBapBHgWkQx4DmUMe
        A5lDHgOZQx4DmUMeA5lDHgOZQx4DmUMeA5lDHgOZQx4DmUMeA5lDHgOZQx4DmUMeA5lDHgOZQx4DmUMe
        A5lDHgOZQh4D3UIeBP9CHgTyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCHgSrQh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBakAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEYj
        ABZCHwWnQh4E7kIeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0Ie
        BP9CHgT/Qh4E/0IeBP9CHgT/Qh4E/0IeBO5BHgWoPRgAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////4AAAf8AAAD/AAAA/x////8f////Hg
        B9/x4AeP8eAHB/H//gPx//+P8f//j/HgH4/x4B+P8f//j/H//4/Af/+P4OAHj/HgB4/74AeP////j///
        /4/wAAAP8AAAD/gAAB//////////////////////
</value>
  </data>
</root>